% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{backup_redcap}
\alias{backup_redcap}
\title{Function to run the backup of an entire REDCap data dictionary.}
\usage{
backup_redcap(
  cfg,
  protocol,
  out_dir = getwd(),
  mnt_path = NA,
  remote_name = NA,
  remote_path = NA,
  max_attempts = 5,
  trap = FALSE,
  include_timestamp = FALSE
)
}
\arguments{
\item{cfg}{is the path to the lab's json configuration file. (Required)}

\item{protocol}{is the project we want data from.}

\item{out_dir}{is the directory to save the output to (Defaults to current)}

\item{mnt_path}{is the directory to try and remount.}

\item{remote_name}{is the name of the configured rclone remote.}

\item{remote_path}{is the path to the remote directory to mount locally.}

\item{max_attempts}{sets the max number of mount attempts.}

\item{trap}{if set to TRUE, the mount will not persist after the session.}

\item{include_timestamp}{will add a timestamp to the saved output.}

\item{attempt}{sets the attempt number you are on.}
}
\value{
An output csv that backs up REDCap data.
}
\description{
Goal of this is to pull all fields for all records and export this
as a single csv. Similar to the download csv functionality of
the REDCap UI. Uses the REDCapR tool to accomplish the download.
}
\examples{
backup_redcap(cfg="/Volumes/bierka_root/datamesh/behav/redcap3.json",
protocol="bsocial", out_dir="/Users/dnplserv/Desktop",
include_timestamp=TRUE)
}
